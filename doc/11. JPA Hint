┌──────────────────────────────────────────────────────────────────────┐
│ JPA Hint & Lock                                                      │
┕──────────────────────────────────────────────────────────────────────┙

┌──────────────────────────────────────────────────────────────────────┐
│                                                                      │
    1. JPA Hint

        - JPA 쿼리 힌트 ( SQL 힌트가 아니라 JPA 구현체에게 제공하는 힌트 )
            *예)
            @QueryHints ( value = @QueryHint(name="org.hibernate.readOnly", value="true"))
            Member findReadOnlyByUsername(String username);

        - 쿼리 힌트 사용 확인
            @Test
            void queryHint() throws Exception{
                memberRepository.save ( new Member("member1", 10) );
                em.flush();
                em.clear();

                Member member = memberRepository.findReadOnlyByUsername("member1");
                member.changeUserName("member2");

                em.flush(); // update query 실행 X
            }


    2. 읽기 전용으로 엔터티 조회 방법

        1) 스칼라 타입으로 조회
            - 인티티 객체로 반환하지 않으면 <영속성 컨텍스트>가 관리하지 않는다.
                select o.id, o.name from Order o

        2) 읽기 전용 쿼리 힌트 사용
            - 읽기 전용 조회시 <영속성 컨텍스트>는 스냅샷을 보관하지 않는다.
            @QueryHints ( value = @QueryHint(name="org.hibernate.readOnly", value="true"))
            Member findReadOnlyByUsername(String username);

        3) 읽기 전용 트랜잭션
            - 트랜잭션에 readOnly=true 옵션을 주면 스프링 프레임워크가
                하이버네이트 세션 플러시 모드를 MANUAL로 설정
              이렇게 하면, 강제로 flush를 호출하지 않는한 플러시가 일어나지 않는다.
              따라서 트랜잭션 commit 하더라도 영속성 컨텍스트가 flush 되지 않아서
              엔터티의 등록, 수정, 삭제가 동작하지 않고, 또한 읽기 전용이므로 영속성 컨텍스트는
              변경 감지를 위한 스냅샷을 보관하지 않으므로 성능 향상이 된다.
            @Transactional(readOnly = true)

    3. select for update ( UPDATE LOCK 의 JPA 지원 )

        @Lock(LockModeType.PESSIMISTIC_WRITE)
        List<Member> findLockByUsername(String username);

│                                                                      │
┕──────────────────────────────────────────────────────────────────────┙
